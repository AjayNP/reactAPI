{"ast":null,"code":"var _jsxFileName = \"G:\\\\Ajay\\\\reactMovieApp\\\\src\\\\components\\\\elements\\\\JsonPlaceholder\\\\JsonPlaceholder.js\";\nimport React, { Component } from 'react';\n\nclass JsonPlaceholder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      items: [],\n      isLoaded: false\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users').then(res => res.json()).then(json => {\n      this.setState({\n        isLoaded: true,\n        items: json\n      });\n    });\n  }\n\n  render() {\n    let _this$state = this.state,\n        isLoaded = _this$state.isLoaded,\n        items = _this$state.items;\n\n    if (!isLoaded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"Loading...\");\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, items.map(items => React.createElement(\"li\", {\n        key: item.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, items.catchPhrase))));\n    }\n  }\n\n}\n\nexport default JsonPlaceholder;","map":{"version":3,"sources":["G:/Ajay/reactMovieApp/src/components/elements/JsonPlaceholder/JsonPlaceholder.js"],"names":["React","Component","JsonPlaceholder","state","items","isLoaded","componentDidMount","fetch","then","res","json","setState","render","map","item","id","catchPhrase"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,eAAN,SAA8BD,SAA9B,CAAwC;AAAA;AAAA;AAAA,SAEpCE,KAFoC,GAE9B;AACFC,MAAAA,KAAK,EAAE,EADL;AAEFC,MAAAA,QAAQ,EAAE;AAFR,KAF8B;AAAA;;AAOpCC,EAAAA,iBAAiB,GAAE;AACfC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACKC,IADL,CACUC,GAAG,IAAGA,GAAG,CAACC,IAAJ,EADhB,EAEKF,IAFL,CAEUE,IAAI,IAAI;AACV,WAAKC,QAAL,CAAc;AACVN,QAAAA,QAAQ,EAAE,IADA;AAEVD,QAAAA,KAAK,EAAEM;AAFG,OAAd;AAIH,KAPL;AAQH;;AAEDE,EAAAA,MAAM,GAAG;AAAA,sBAEmB,KAAKT,KAFxB;AAAA,QAEAE,QAFA,eAEAA,QAFA;AAAA,QAEUD,KAFV,eAEUA,KAFV;;AAGG,QAAG,CAACC,QAAJ,EAAa;AACT,aAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAR;AACH,KAFD,MAGI;AACA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKD,KAAK,CAACS,GAAN,CAAUT,KAAK,IACX;AAAI,QAAA,GAAG,EAAEU,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKX,KAAK,CAACY,WADX,CADJ,CADL,CADH,CADJ;AAYH;AAGZ;;AAxCmC;;AA2CxC,eAAed,eAAf","sourcesContent":["import React, { Component } from 'react'\r\n\r\nclass JsonPlaceholder extends Component {\r\n\r\n    state={\r\n        items: [],\r\n        isLoaded: false\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(res=> res.json())\r\n            .then(json => {\r\n                this.setState({\r\n                    isLoaded: true,\r\n                    items: json,\r\n                })\r\n            });\r\n    }\r\n\r\n    render() {\r\n        \r\n        let {isLoaded, items} = this.state;\r\n                if(!isLoaded){\r\n                    return (<div>Loading...</div>)\r\n                }\r\n                else{\r\n                    return(\r\n                        <div>\r\n                           <ul>\r\n                               {items.map(items => (\r\n                                    <li key={item.id}>\r\n                                        {items.catchPhrase}\r\n                                    </li>\r\n                               ))\r\n                               }\r\n                           </ul>\r\n                        </div>\r\n                    )\r\n                }\r\n       \r\n        \r\n    }\r\n}\r\n\r\nexport default JsonPlaceholder;"]},"metadata":{},"sourceType":"module"}