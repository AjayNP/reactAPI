{"ast":null,"code":"var _jsxFileName = \"G:\\\\Ajay\\\\reactMovieApp\\\\src\\\\components\\\\elements\\\\JsonPlaceholder\\\\CommentsAPI.js\";\nimport React, { Component } from \"react\";\n\nclass CommentAPI extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      items: [],\n      isLoaded: false\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/comments').then(res => res.json()).then(json => {\n      this.setState({\n        isLoaded: true,\n        items: json\n      });\n    });\n  }\n\n  render() {\n    let _this$state = this.state,\n        items = _this$state.items,\n        isLoaded = _this$state.isLoaded;\n    return React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"Comments\");\n  }\n\n}\n\nexport default CommentAPI;","map":{"version":3,"sources":["G:/Ajay/reactMovieApp/src/components/elements/JsonPlaceholder/CommentsAPI.js"],"names":["React","Component","CommentAPI","state","items","isLoaded","componentDidMount","fetch","then","res","json","setState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,UAAN,SAAyBD,SAAzB,CAAmC;AAAA;AAAA;AAAA,SACjCE,KADiC,GACzB;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,QAAQ,EAAE;AAFJ,KADyB;AAAA;;AAMnCC,EAAAA,iBAAiB,GAAE;AACfC,IAAAA,KAAK,CAAC,+CAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEME,IAAI,IAAI;AACV,WAAKC,QAAL,CAAc;AACVN,QAAAA,QAAQ,EAAE,IADA;AAEVD,QAAAA,KAAK,EAAEM;AAFG,OAAd;AAIH,KAPD;AAQH;;AACCE,EAAAA,MAAM,GAAG;AAAA,sBACmB,KAAKT,KADxB;AAAA,QACAC,KADA,eACAA,KADA;AAAA,QACOC,QADP,eACOA,QADP;AAEP,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD;;AAnBgC;;AAqBnC,eAAeH,UAAf","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass CommentAPI extends Component {\r\n  state = {\r\n    items: [],\r\n    isLoaded: false\r\n  };\r\n\r\ncomponentDidMount(){\r\n    fetch('https://jsonplaceholder.typicode.com/comments')\r\n    .then(res => res.json())\r\n    .then(json => {\r\n        this.setState({\r\n            isLoaded: true,\r\n            items: json\r\n        })\r\n    })\r\n}\r\n  render() {\r\n      let {items, isLoaded} = this.state;\r\n    return <h1>Comments</h1>;\r\n  }\r\n}\r\nexport default CommentAPI;\r\n"]},"metadata":{},"sourceType":"module"}