{"ast":null,"code":"var _jsxFileName = \"G:\\\\Ajay\\\\reactMovieApp\\\\src\\\\components\\\\elements\\\\JsonPlaceholder\\\\CommentsAPI.js\";\nimport React, { Component } from \"react\";\nimport \"./Comment.css\";\n\nclass CommentAPI extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      items: [],\n      isLoaded: false\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/comments\").then(res => res.json()).then(jsonData => {\n      this.setState({\n        isLoaded: true,\n        items: jsonData\n      });\n    });\n  }\n\n  render() {\n    let _this$state = this.state,\n        items = _this$state.items,\n        isLoaded = _this$state.isLoaded;\n\n    if (!isLoaded) {\n      return React.createElement(\"h1\", {\n        className: \"loader\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, items.map(data => React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, data.id, \" \", data.email)));\n    }\n  }\n\n}\n\nexport default CommentAPI;","map":{"version":3,"sources":["G:/Ajay/reactMovieApp/src/components/elements/JsonPlaceholder/CommentsAPI.js"],"names":["React","Component","CommentAPI","state","items","isLoaded","componentDidMount","fetch","then","res","json","jsonData","setState","render","map","data","id","email"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,eAAP;;AACA,MAAMC,UAAN,SAAyBD,SAAzB,CAAmC;AAAA;AAAA;AAAA,SACjCE,KADiC,GACzB;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,QAAQ,EAAE;AAFJ,KADyB;AAAA;;AAMjCC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,+CAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQG,QAAQ,IAAI;AAChB,WAAKC,QAAL,CAAc;AACZP,QAAAA,QAAQ,EAAE,IADE;AAEZD,QAAAA,KAAK,EAAEO;AAFK,OAAd;AAID,KAPH;AAQD;;AACDE,EAAAA,MAAM,GAAG;AAAA,sBACmB,KAAKV,KADxB;AAAA,QACDC,KADC,eACDA,KADC;AAAA,QACMC,QADN,eACMA,QADN;;AAEP,QAAI,CAACA,QAAL,EAAe;AACb,aAAO;AAAI,QAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFD,MAEO;AACL,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGD,KAAK,CAACU,GAAN,CAAUC,IAAI,IACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGA,IAAI,CAACC,EADR,OACaD,IAAI,CAACE,KADlB,CADD,CADH,CADF;AASD;AACF;;AA/BgC;;AAiCnC,eAAef,UAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./Comment.css\";\r\nclass CommentAPI extends Component {\r\n  state = {\r\n    items: [],\r\n    isLoaded: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/comments\")\r\n      .then(res => res.json())\r\n      .then(jsonData => {\r\n        this.setState({\r\n          isLoaded: true,\r\n          items: jsonData\r\n        });\r\n      });\r\n  }\r\n  render() {\r\n    let { items, isLoaded } = this.state;\r\n    if (!isLoaded) {\r\n      return <h1 className=\"loader\"></h1>;\r\n    } else {\r\n      return (\r\n        <div>\r\n          {items.map(data => (\r\n            <p>\r\n              {data.id} {data.email}\r\n            </p>\r\n          ))}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\nexport default CommentAPI;\r\n"]},"metadata":{},"sourceType":"module"}